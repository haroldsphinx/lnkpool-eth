global:
  ## Eth2 network ID
  ##
  network: "holesky"

  JWTSecret: "5acbeb8282e1dafba5ee75534b4d8ef0312362edc935bab8be1bf9a46f6779ba"

  executionEndpoints: ["http://geth.geth.svc.cluster.local.:8551"]

  imagePullSecrets: []

  serviceAccount:
    create: true

  rbac:
    create: true

  metrics:
    enabled: true

    serviceMonitor:
   
      enabled: true
    prometheusRule:
      enabled: true
  livenessProbe:
    enabled: false

  readinessProbe:
    enabled: false

initImage:
  repository: "bitnami/kubectl"
  tag: "1.24"
  pullPolicy: IfNotPresent
sidecar:
  repository: "stakewiselabs/public/ethnode-sidecar"
  tag: "v1.0.5"
  pullPolicy: IfNotPresent
  bindAddr: "0.0.0.0"
  bindPort: 3000

image:
  repository: "sigp/lighthouse"
  tag: "v6.0.1"
  pullPolicy: IfNotPresent

imagePullSecrets: []
nameOverride: ""

fullnameOverride: ""


http:
  enabled: true
  port: "5052"
  portName: "http"
  address: "0.0.0.0"
  allowOrigin: "*"

checkpointSyncUrl: "https://beaconstate.info"

targetPeers: 80

extraFlags: []
serviceAccount:
  annotations: {}
  name: ""

additionalLabels:
  client-type: "consensus"

securityContext:
  fsGroup: 1001
  runAsUser: 1001

rbac:
  name: ""
  clusterRules:
    - apiGroups: [""]
      resources:
      - "nodes"
      verbs:
      - "get"
      - "list"
      - "watch"

  rules:
    - apiGroups: [""]
      resources:
      - "services"
      verbs:
      - "get"
      - "list"
      - "watch"
nodeSelector: {}
tolerations: []
affinity: {}
priorityClassName: ""
podDisruptionBudget:
  enabled: false
  maxUnavailable: 1
verticalAutoscaler:
  enabled: false
  updateMode: Off
  containerPolicies: {}
resources: 
livenessProbe:
  initialDelaySeconds: 900
  timeoutSeconds: 3
  periodSeconds: 30
  failureThreshold: 3
  successThreshold: 1
  httpGet:
    path: /eth2/liveness
    port: sidecar
    scheme: HTTP

readinessProbe:
  initialDelaySeconds: 300
  timeoutSeconds: 3
  periodSeconds: 30
  failureThreshold: 30
  successThreshold: 2
  httpGet:
    path: /eth2/readiness
    port: sidecar
    scheme: HTTP
svcHeadless: false

sessionAffinity:
  enabled: false
  timeoutSeconds: 86400
p2pNodePort:

  enabled: false
  annotations: {}
  type: NodePort
  startAt: 31300

  replicaToNodePort: {}

metrics:
  port: 5054

  flags:
    - "--metrics"
    - "--metrics-port=5054"
    - "--metrics-address=0.0.0.0"

  serviceMonitor:
    namespace: ""
    interval: 30s
    scrapeTimeout: ""
    relabellings: []
    metricRelabelings: []
    honorLabels: false
    additionalLabels: {}
  prometheusRule:
    default: true
    namespace: ""
    additionalLabels: {}
    rules: []


initChownData: true

persistence:
  enabled: true
  storageClassName: "do-block-storage"
  accessModes:
    - ReadWriteOnce
  size: 500Gi
  annotations: {}
