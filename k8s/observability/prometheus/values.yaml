forceNamespace: monitoring

alertmanager:
  enabled: false

grafana:
  enabled: true
  adminPassword: "admin"
  adminUser: "admin"
  service:
    type: ClusterIP
    port: 3000
  ingress:
    enabled: true
    ingressClassName: nginx
    hosts:
      - grafana.haroldsphinx.com
    tls:
      - secretName: grafana-tls
        hosts:
          - grafana.haroldsphinx.com
    annotations:
      kubernetes.io/ingress.class: nginx
      
prometheus:
  enabled: true
  prometheusSpec:
    storageSpec:
      volumeClaimTemplate:
        spec:
          storageClassName: "standard" 
          accessModes:
            - ReadWriteOnce
          resources:
            requests:
              storage: 10Gi

    additionalScrapeConfigs:
      - job_name: 'geth-testnet'
        metrics_path: /debug/metrics/prometheus
        static_configs:
          - targets:
              - geth-testnet.geth-testnet.svc.cluster.local:6060
      - job_name: 'lighthouse-testnet'
        metrics_path: /metrics
        static_configs:
          - targets:
              - lighthouse.lighthouse-consensus.svc.cluster.local:5054
      - job_name: "prometheus"
        static_configs:
          - targets:
              - localhost:9090
      - job_name: 'kubernetes-nodes-cadvisor'
        scheme: https
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
          insecure_skip_verify: true
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        kubernetes_sd_configs:
          - role: node
        relabel_configs:
          - target_label: __address__
            replacement: kubernetes.default.svc:443
          - source_labels: [__meta_kubernetes_node_name]
            regex: (.+)
            target_label: __metrics_path__
            replacement: /api/v1/nodes/$1/proxy/metrics/cadvisor
          - action: replace
            source_labels: [__meta_kubernetes_node_name]
            target_label: node
      - job_name: 'kubernetes-pods'
        honor_labels: true
        kubernetes_sd_configs:
          - role: pod
        relabel_configs:
          - source_labels:
              [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
            action: keep
            regex: true
          - source_labels: [__meta_kubernetes_pod_phase]
            regex: Pending|Succeeded|Failed
            action: drop
          - action: replace
            source_labels:
              [__meta_kubernetes_pod_annotation_prometheus_io_scheme]
            regex: (https?)
            target_label: __scheme__
          - action: replace
            source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
            target_label: __metrics_path__
            regex: (.+)
          - action: replace
            source_labels:
              [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
            regex: ([^:]+)(?::\d+)?;(\d+)
            replacement: $1:$2
            target_label: __address__
          - action: labelmap
            regex: __meta_kubernetes_pod_label_app_kubernetes_io_(.+)
          - action: labelmap
            regex: __meta_kubernetes_pod_label_(.+)
          - action: labeldrop
            regex: (app_kubernetes_io_.*|chart|component|pod_template.*|release|heritage|controller_.*|k8s_.*|managed_by|name|helm.*|kind)
          - source_labels: [__meta_kubernetes_namespace]
            action: replace
            target_label: namespace
          - action: replace
            source_labels: [__meta_kubernetes_pod_name]
            target_label: pod
          - action: replace
            source_labels: [__meta_kubernetes_pod_container_name]
            target_label: container
          - action: replace
            source_labels: [project_id, pod]
            regex: ;(.*)
            target_label: project_id
        metric_relabel_configs:
          - action: replace
            source_labels: [node, __meta_kubernetes_pod_node_name]
            regex: ;(.*)
            target_label: node

      - job_name: 'kubernetes-service-endpoints'
        honor_labels: true

        kubernetes_sd_configs:
          - role: endpoints
        relabel_configs:
          - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape]
            action: keep
            regex: true
          - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape_slow]
            action: drop
            regex: true
          - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]
            action: replace
            target_label: __scheme__
            regex: (https?)
          - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
            action: replace
            target_label: __metrics_path__
            regex: (.+)
          - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
            action: replace
            target_label: __address__
            regex: (.+?)(?::\d+)?;(\d+)
            replacement: $1:$2
          - action: labelmap
            regex: __meta_kubernetes_service_annotation_prometheus_io_param_(.+)
            replacement: __param_$1
          - action: labelmap
            regex: __meta_kubernetes_service_label_(.+)
          - source_labels: [__meta_kubernetes_namespace]
            action: replace
            target_label: namespace
          - source_labels: [__meta_kubernetes_service_name]
            action: replace
            target_label: service
          - source_labels: [__meta_kubernetes_pod_node_name]
            action: replace
            target_label: node
      - job_name: 'kubernetes-apiservers'
        kubernetes_sd_configs:
          - role: endpoints
        scheme: https
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
          insecure_skip_verify: true
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        relabel_configs:
          - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
            action: keep
            regex: default;kubernetes;https
      - job_name: 'kubernetes-nodes'
        scheme: https
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
          insecure_skip_verify: true
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        kubernetes_sd_configs:
          - role: node
        relabel_configs:
          - action: labelmap
            regex: __meta_kubernetes_node_label_(.+)
          - target_label: __address__
            replacement: kubernetes.default.svc:443
          - source_labels: [__meta_kubernetes_node_name]
            regex: (.+)
            target_label: __metrics_path__
            replacement: /api/v1/nodes/$1/proxy/metrics
      - job_name: 'nginx-ingress'
        honor_labels: true
        kubernetes_sd_configs:
          - role: service
        relabel_configs:
          - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape]
            action: keep
            regex: true
          - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_port]
            action: replace
            target_label: __address__
            regex: (.+)(?::\d+);(\d+)
            replacement: $1:$2
     
kubeStateMetrics:
  enabled: false

kube-state-metrics:
  podAnnotations:
    prometheus.io/port: '8080'
    prometheus.io/scrape: 'true'
  collectors:
    - daemonsets
    - deployments
    - horizontalpodautoscalers
    - ingresses
    - jobs
    - namespaces
    - nodes
    - persistentvolumeclaims
    - persistentvolumes
    - pods
    - replicasets
    - replicationcontrollers
    - resourcequotas
    - services
    - statefulsets
    - storageclasses
    - volumeattachments

nodeExporter:
  enabled: false
  image:
    repository: quay.io/prometheus/node-exporter
    tag: v1.7.0
  podAnnotations:
    prometheus.io/port: '9100'
    prometheus.io/scrape: 'true'
  extraArgs:
    collector.disable-defaults:
    collector.cpu:
    collector.meminfo:
    collector.os:
    collector.filesystem: